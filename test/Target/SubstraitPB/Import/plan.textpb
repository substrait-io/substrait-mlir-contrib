# RUN: substrait-translate -protobuf-to-substrait %s \
# RUN:   --split-input-file="# ""-----" \
# RUN: | FileCheck %s

# RUN: substrait-translate -protobuf-to-substrait %s \
# RUN:   --split-input-file="# ""-----" --output-split-marker="// -----" \
# RUN: | substrait-translate -substrait-to-protobuf \
# RUN:   --split-input-file --output-split-marker="# ""-----" \
# RUN: | substrait-translate -protobuf-to-substrait \
# RUN:   --split-input-file="# ""-----" --output-split-marker="// -----" \
# RUN: | FileCheck %s

# CHECK-LABEL: substrait.plan version 0 : 42 : 1
# CHECK-SAME:    git_hash "hash" producer "producer" {
# CHECK-NEXT:  }

version {
  minor_number: 42
  patch_number: 1
  git_hash: "hash"
  producer: "producer"
}

# -----

# CHECK-LABEL: substrait.plan
# CHECK-NEXT:    relation as ["x", "y", "z"] {
# CHECK-NEXT:      %[[V0:.*]] = named_table @t as ["a", "b", "c"] : tuple<si32, tuple<si32>>
# CHECK-NEXT:      yield %[[V0]] : tuple<si32, tuple<si32>>
# CHECK-NEXT:    }
# CHECK-NEXT:    relation {
# CHECK-NEXT:      %[[V1:.*]] = named_table @t as ["a"] : tuple<si32>
# CHECK-NEXT:      yield %[[V1]] : tuple<si32>

relations {
  root {
    input {
      read {
        common {
          direct {
          }
        }
        base_schema {
          names: "a"
          names: "b"
          names: "c"
          struct {
            types {
              i32 {
                nullability: NULLABILITY_REQUIRED
              }
            }
            types {
              struct {
                types {
                  i32 {
                    nullability: NULLABILITY_REQUIRED
                  }
                }
              }
            }
            nullability: NULLABILITY_REQUIRED
          }
        }
        named_table {
          names: "t"
        }
      }
    }
    names: "x"
    names: "y"
    names: "z"
  }
}
relations {
  rel {
    read {
      common {
        direct {
        }
      }
      base_schema {
        names: "a"
        struct {
          types {
            i32 {
              nullability: NULLABILITY_REQUIRED
            }
          }
          nullability: NULLABILITY_REQUIRED
        }
      }
      named_table {
        names: "t"
      }
    }
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL: substrait.plan
# CHECK-NEXT:    extension_uri @extension_uri.1 at "http://url.1/with/extensions.yml"
# CHECK-NEXT:    extension_uri @extension_uri.2 at "http://url.2/with/extensions.yml"
# CHECK-NEXT:    extension_uri @extension_uri.42 at "http://url.42/with/extensions.yml"
# CHECK-NEXT:    extension_uri @extension_uri.0 at "http://some.url/with/extensions.yml"
# CHECK-NEXT:    extension_uri @extension_uri.3 at "http://url.foo/with/extensions.yml"
# CHECK-NEXT:    extension_uri @extension_uri.4 at "http://url.bar/with/extensions.yml"
# CHECK-NEXT:    extension_function @extension_function.1 at @extension_uri.1["func1"]
# CHECK-NEXT:    extension_function @extension_function.42 at @extension_uri.42["func42"]
# CHECK-NEXT:    extension_type @extension_type.1 at @extension_uri.2["type1"]
# CHECK-NEXT:    extension_type @extension_type.42 at @extension_uri.2["type42"]
# CHECK-NEXT:    extension_type_variation @extension_type_variation.1 at @extension_uri.1["typevar1"]
# CHECK-NEXT:    extension_type_variation @extension_type_variation.42 at @extension_uri.1["typevar2"]
# CHECK-NEXT:  }

extension_uris {
  extension_uri_anchor: 1
  uri: "http://url.1/with/extensions.yml"
}
extension_uris {
  extension_uri_anchor: 2
  uri: "http://url.2/with/extensions.yml"
}
extension_uris {
  extension_uri_anchor: 42
  uri: "http://url.42/with/extensions.yml"
}
extension_uris {
  uri: "http://some.url/with/extensions.yml"
}
extension_uris {
  extension_uri_anchor: 3
  uri: "http://url.foo/with/extensions.yml"
}
extension_uris {
  extension_uri_anchor: 4
  uri: "http://url.bar/with/extensions.yml"
}
extensions {
  extension_function {
    extension_uri_reference: 1
    function_anchor: 1
    name: "func1"
  }
}
extensions {
  extension_function {
    extension_uri_reference: 42
    function_anchor: 42
    name: "func42"
  }
}
extensions {
  extension_type {
    extension_uri_reference: 2
    type_anchor: 1
    name: "type1"
  }
}
extensions {
  extension_type {
    extension_uri_reference: 2
    type_anchor: 42
    name: "type42"
  }
}
extensions {
  extension_type_variation {
    extension_uri_reference: 1
    type_variation_anchor: 1
    name: "typevar1"
  }
}
extensions {
  extension_type_variation {
    extension_uri_reference: 1
    type_variation_anchor: 42
    name: "typevar2"
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL: substrait.plan
# CHECK-SAME:   advanced_extension
# CHECK-SAME:     optimization = "\08*" : !substrait.any<"type.googleapis.com/google.protobuf.Int32Value">
# CHECK-SAME:     enhancement = "\08\01" : !substrait.any<"type.googleapis.com/google.protobuf.BoolValue">
# CHECK-NEXT: }

advanced_extensions {
  optimization {
    type_url: "type.googleapis.com/google.protobuf.Int32Value"
    value: "\010*"
  }
  enhancement {
    type_url: "type.googleapis.com/google.protobuf.BoolValue"
    value: "\010\01"
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL: substrait.plan
# CHECK-SAME:   advanced_extension optimization
# CHECK-SAME:     "\08*" : !substrait.any<"type.googleapis.com/google.protobuf.Int32Value">
# CHECK-NEXT: }

advanced_extensions {
  optimization {
    type_url: "type.googleapis.com/google.protobuf.Int32Value"
    value: "\010*"
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL: substrait.plan
# CHECK-SAME:   advanced_extension enhancement
# CHECK-SAME:     "\08\01" : !substrait.any<"type.googleapis.com/google.protobuf.BoolValue">
# CHECK-NEXT: }

advanced_extensions {
  enhancement {
    type_url: "type.googleapis.com/google.protobuf.BoolValue"
    value: "\010\01"
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL: substrait.plan
# CHECK-SAME:   expected_type_urls
# CHECK-SAME:     ["http://some.url/with/type.proto",
# CHECK-SAME:      "http://other.url/with/type.proto"]
# CHECK-NEXT: }

expected_type_urls: "http://some.url/with/type.proto"
expected_type_urls: "http://other.url/with/type.proto"
version {
  minor_number: 42
  patch_number: 1
}
