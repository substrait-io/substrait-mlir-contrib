# RUN: substrait-translate -protobuf-to-substrait %s \
# RUN:   --split-input-file="# ""-----" \
# RUN: | FileCheck %s

# RUN: substrait-translate -protobuf-to-substrait %s \
# RUN:   --split-input-file="# ""-----" --output-split-marker="// -----" \
# RUN: | substrait-translate -substrait-to-protobuf \
# RUN:   --split-input-file --output-split-marker="# ""-----" \
# RUN: | substrait-translate -protobuf-to-substrait \
# RUN:   --split-input-file="# ""-----" --output-split-marker="// -----" \
# RUN: | FileCheck %s

# CHECK-LABEL:  substrait.plan
# CHECK-NEXT:     relation {
# CHECK-NEXT:       %[[V0:.*]] = named_table
# CHECK-NEXT:       %[[V1:.*]] = named_table
# CHECK-NEXT:       %[[V2:.*]] = set unspecified %[[V0]], %[[V1]] : tuple<si32>
# CHECK-NEXT:       yield %[[V2]] : tuple<si32>

relations {
  rel {
    set {
      common {
        direct {
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "b"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t2"
          }
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "a"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t1"
          }
        }
      }
    }
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL:  substrait.plan
# CHECK-NEXT:     relation {
# CHECK-NEXT:       %[[V0:.*]] = named_table
# CHECK-NEXT:       %[[V1:.*]] = named_table
# CHECK-NEXT:       %[[V2:.*]] = set minus_primary %[[V0]], %[[V1]] : tuple<si32>
# CHECK-NEXT:       yield %[[V2]] : tuple<si32>

relations {
  rel {
    set {
      common {
        direct {
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "b"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t2"
          }
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "a"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t1"
          }
        }
      }
      op: SET_OP_MINUS_PRIMARY
    }
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL:  substrait.plan
# CHECK-NEXT:     relation {
# CHECK-NEXT:       %[[V0:.*]] = named_table
# CHECK-NEXT:       %[[V1:.*]] = named_table
# CHECK-NEXT:       %[[V2:.*]] = set minus_multiset %[[V0]], %[[V1]] : tuple<si32>
# CHECK-NEXT:       yield %[[V2]] : tuple<si32>

relations {
  rel {
    set {
      common {
        direct {
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "b"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t2"
          }
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "a"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t1"
          }
        }
      }
      op: SET_OP_MINUS_MULTISET
    }
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL:  substrait.plan
# CHECK-NEXT:     relation {
# CHECK-NEXT:       %[[V0:.*]] = named_table
# CHECK-NEXT:       %[[V1:.*]] = named_table
# CHECK-NEXT:       %[[V2:.*]] = set intersection_primary %[[V0]], %[[V1]] : tuple<si32>
# CHECK-NEXT:       yield %[[V2]] : tuple<si32>

relations {
  rel {
    set {
      common {
        direct {
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "b"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t2"
          }
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "a"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t1"
          }
        }
      }
      op: SET_OP_INTERSECTION_PRIMARY
    }
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL:  substrait.plan
# CHECK-NEXT:     relation {
# CHECK-NEXT:       %[[V0:.*]] = named_table
# CHECK-NEXT:       %[[V1:.*]] = named_table
# CHECK-NEXT:       %[[V2:.*]] = set intersection_multiset %[[V0]], %[[V1]] : tuple<si32>
# CHECK-NEXT:       yield %[[V2]] : tuple<si32>

relations {
  rel {
    set {
      common {
        direct {
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "b"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t2"
          }
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "a"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t1"
          }
        }
      }
      op: SET_OP_INTERSECTION_MULTISET
    }
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL:  substrait.plan
# CHECK-NEXT:     relation {
# CHECK-NEXT:       %[[V0:.*]] = named_table
# CHECK-NEXT:       %[[V1:.*]] = named_table
# CHECK-NEXT:       %[[V2:.*]] = set union_distinct %[[V0]], %[[V1]] : tuple<si32>
# CHECK-NEXT:       yield %[[V2]] : tuple<si32>

relations {
  rel {
    set {
      common {
        direct {
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "b"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t2"
          }
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "a"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t1"
          }
        }
      }
      op: SET_OP_UNION_DISTINCT
    }
  }
}
version {
  minor_number: 42
  patch_number: 1
}

# -----

# CHECK-LABEL:  substrait.plan
# CHECK-NEXT:     relation {
# CHECK-NEXT:       %[[V0:.*]] = named_table
# CHECK-NEXT:       %[[V1:.*]] = named_table
# CHECK-NEXT:       %[[V2:.*]] = set union_all %[[V0]], %[[V1]] : tuple<si32>
# CHECK-NEXT:       yield %[[V2]] : tuple<si32>

relations {
  rel {
    set {
      common {
        direct {
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "b"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t2"
          }
        }
      }
      inputs {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "a"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t1"
          }
        }
      }
      op: SET_OP_UNION_ALL
    }
  }
}
version {
  minor_number: 42
  patch_number: 1
}
