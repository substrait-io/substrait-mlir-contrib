# RUN: substrait-translate -protobuf-to-substrait %s \
# RUN:   --split-input-file="# ""-----" \
# RUN: | FileCheck %s

# RUN: substrait-translate -protobuf-to-substrait %s \
# RUN:   --split-input-file="# ""-----" --output-split-marker="// -----" \
# RUN: | substrait-translate -substrait-to-protobuf \
# RUN:   --split-input-file --output-split-marker="# ""-----" \
# RUN: | substrait-translate -protobuf-to-substrait \
# RUN:   --split-input-file="# ""-----" --output-split-marker="// -----" \
# RUN: | FileCheck %s

# CHECK-LABEL: substrait.plan
# CHECK-NEXT:    extension_uri @[[URI:.*]] at "http://some.url/with/extensions.yml"
# CHECK-NEXT:    extension_function @[[F1:.*]] at @[[URI]]["somefunc"]
# CHECK-NEXT:    extension_function @[[F2:.*]] at @[[URI]]["somefunc"]
# CHECK-NEXT:    relation
# CHECK-NEXT:      named_table
# CHECK-NEXT:      filter
# CHECK-NEXT:      (%[[V0:.*]]: tuple<si32>):
# CHECK-NEXT:        %[[V1:.*]] = field_reference %[[V0]][0] : tuple<si32>
# CHECK-NEXT:        %[[V2:.*]] = call @[[F2]](%[[V1]]) : (si32) -> si1
# CHECK-NEXT:        yield %[[V2]] : si1

extension_uris {
  uri: "http://some.url/with/extensions.yml"
}
extensions {
  extension_function {
    name: "somefunc"
  }
}
extensions {
  extension_function {
    function_anchor: 1
    name: "somefunc"
  }
}
relations {
  rel {
    filter {
      common {
        direct {
        }
      }
      input {
        read {
          common {
            direct {
            }
          }
          base_schema {
            names: "a"
            struct {
              types {
                i32 {
                  nullability: NULLABILITY_REQUIRED
                }
              }
              nullability: NULLABILITY_REQUIRED
            }
          }
          named_table {
            names: "t1"
          }
        }
      }
      condition {
        scalar_function {
          function_reference: 1
          output_type {
            bool {
              nullability: NULLABILITY_REQUIRED
            }
          }
          arguments {
            value {
              selection {
                direct_reference {
                  struct_field {
                  }
                }
                root_reference {
                }
              }
            }
          }
        }
      }
    }
  }
}
version {
  minor_number: 42
  patch_number: 1
}
